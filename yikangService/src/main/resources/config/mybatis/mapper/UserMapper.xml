<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yikangyiliao.pension.dao.UserDao" >
  <resultMap id="BaseResultMap" type="com.yikangyiliao.pension.entity.User" >
    <id column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="login_name" property="loginName" jdbcType="VARCHAR" />
    <result column="login_password" property="loginPassword" jdbcType="VARCHAR" />
    <result column="salt" property="salt" jdbcType="VARCHAR" />
    <result column="access_tiket" property="accessTiket" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="BIGINT" />
    <result column="login_time" property="loginTime" jdbcType="BIGINT" />
    <result column="invitation_code" property="invitationCode" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    user_id, user_name, login_name, login_password, salt, access_tiket, create_time, 
    login_time, invitation_code
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from users
    where user_id = #{userId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from users
    where user_id = #{userId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.yikangyiliao.pension.entity.User" >
    insert into users (user_id, user_name, login_name, 
      login_password, salt, access_tiket, 
      create_time, login_time, invitation_code
      )
    values (#{userId,jdbcType=BIGINT}, #{userName,jdbcType=VARCHAR}, #{loginName,jdbcType=VARCHAR}, 
      #{loginPassword,jdbcType=VARCHAR}, #{salt,jdbcType=VARCHAR}, #{accessTiket,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=BIGINT}, #{loginTime,jdbcType=BIGINT}, #{invitationCode,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.yikangyiliao.pension.entity.User" >
    <selectKey resultType="Long" keyProperty="userId" order="AFTER">
		SELECT LAST_INSERT_ID()
	</selectKey>
    insert into users
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="loginName != null" >
        login_name,
      </if>
      <if test="loginPassword != null" >
        login_password,
      </if>
      <if test="salt != null" >
        salt,
      </if>
      <if test="accessTiket != null" >
        access_tiket,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="loginTime != null" >
        login_time,
      </if>
      <if test="invitationCode != null" >
        invitation_code,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="loginName != null" >
        #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="loginPassword != null" >
        #{loginPassword,jdbcType=VARCHAR},
      </if>
      <if test="salt != null" >
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="accessTiket != null" >
        #{accessTiket,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="loginTime != null" >
        #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="invitationCode != null" >
        #{invitationCode,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yikangyiliao.pension.entity.User" >
    update users
    <set >
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="loginName != null" >
        login_name = #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="loginPassword != null" >
        login_password = #{loginPassword,jdbcType=VARCHAR},
      </if>
      <if test="salt != null" >
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="accessTiket != null" >
        access_tiket = #{accessTiket,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="loginTime != null" >
        login_time = #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="invitationCode != null" >
        invitation_code = #{invitationCode,jdbcType=INTEGER},
      </if>
    </set>
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yikangyiliao.pension.entity.User" >
    update users
    set user_name = #{userName,jdbcType=VARCHAR},
      login_name = #{loginName,jdbcType=VARCHAR},
      login_password = #{loginPassword,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      access_tiket = #{accessTiket,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=BIGINT},
      login_time = #{loginTime,jdbcType=BIGINT},
      invitation_code = #{invitationCode,jdbcType=INTEGER}
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
 
 <!--修改用户的邀请码  -->
  <update id="updateInvitationCodeByUserId" parameterType="map">
  	update users set invitation_code = #{invitationCode,jdbcType=INTEGER}
  	where user_id=#{userId,jdbcType=BIGINT}
  </update>

  
<!--   根据用户名称查询某一个用户信息 -->
  <select id="getUserByLoginName" parameterType="string" resultMap="BaseResultMap">
  	select 
  		<include refid="Base_Column_List"></include> 
  	from users
  	<where>
  		login_name=#{userName}
  	</where>
  </select>
  
</mapper>